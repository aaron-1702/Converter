88 symbols --> 2 symbols = 1 byte --> 44 byte
15 sensors (2 not in use)


temperature(6 byte): 	primary  	0 - 2 byte 
						secondary 	9 - 11 byte

conductivity(6 byte):	primary		3 - 5 byte
						secondary	12 - 14 byte

pressure(3 byte):			6 - 8 byte


Frequency f = (Byte 0×256) + Byte 1 + (Byte 2÷256)


0C D0 84 	primary temperature
10 76 7B 	primary conductivity
80 45 8F 	pressure
0C CA 6F 	secondary temperatur
11 07 AE 	secondary conductivity

V = 5 (1 - [N ÷ 4095])

7D		01111101		--> N = 011111010101 = 2005		V = 2.5518925518925517
58		0101	1000
A3		10100011		--> N = 100010100011 = 2211		V = 2.3003663003663006

98		10011000		--> N = 100110000111 = 2439		V = 2.021978021978022
7C		0111	1100
41		01000001		--> N = 110001000001 = 3137		V = 1.1697191697191696

F0		11110000		--> N = 111100001101 = 3853		V = 0.29548229548229554
DE		1101	1110
F2		11110010		--> N = 111011110010 = 3826		V = 0.3284493284493284

FF		11111111		--> N = 111111111111 = 4095		V = 0.0
FF		1111	1111
BE		10111110		--> N = 111110111110 = 4030		V = 0.07936507936507964


00		00000000
00		00000000
BB		10111011


29		00101001
51		01010001
2A		00101010


?

08
9D
B7

00
4D
63

8E
5C
91

C4
65

?

temp 1: 0C D0 84   
temp 2: 0C CA 6F
conductivity 1: 10 76 7B
conductivity 2: 11 07 AE
pressure: 80 45 8F

[  0] 0C 	[  1] D0  	[  2] 84
[  3] 10  	[  4] 76  	[  5] 7B
[  6] 80  	[  7] 45  	[  8] 8F
[  9] 0C  	[ 10] CA  	[ 11] 6F
[ 12] 11  	[ 13] 07  	[ 14] AE

[  0] 12 	[  1] 208  	[  2] 132	f = (12×256) + 208 + 132 / 256 = 3280 Hz
[  3] 16  	[  4] 118  	[  5] 123	f = (16×256) + 118 + 123 / 256 = 4214 Hz
[  6] 128  	[  7] 69  	[  8] 143	f = (128×256) + 69 + 143 / 256 = 32837 Hz
[  9] 12  	[ 10] 202  	[ 11] 111	f = (12×256) + 202 + 111 / 256 = 3274 Hz
[ 12] 17  	[ 13] 7  	[ 14] 174	f = (17×256) + 7 + 174 / 256 = 4359 Hz


107 = 263
M = 1.279410e-002
B = -9.215740e+000

temperatur = 0,001279 * 263 - 9,215 = -5,85 °C ???
 

pressure: 6
temp: 2 * 6
cond: 2 * 6
wetlab: 3 * 4 (turbidity, fluoro, cdom)
time: 8
oxygen: 2 * 4?
par: 4?
spar: 4?
free: 2 * 4?
alt: 
ctdstat: 10-12


sum: 58 + 16 = 74



def calculate_descent_rate(
    pressure: np.ndarray,
    temperature: np.ndarray,
    salinity: np.ndarray,
    samplerate: float = 24.0,
    latitude: float = 54.15516666666667,   # example for emb
    longitude: float = 0.0
) -> np.ndarray:
    """
    Calculate descent rate from pressure, temperature, salinity with given samplerate.
    
    :param pressure: Pressure values in dbar
    :param temperature: Temperature values in °C
    :param salinity: Salinity values in PSU
    :param samplerate: Sampling rate in Hz (default 24.0)
    :param latitude: Latitude for density calculation
    :param longitude: Longitude for density calculation
    :return: Descent rate in m/s
    """
    # Zeitvektor erstellen
    anzahl_messwerte = len(pressure)
    time_vector = np.arange(0, anzahl_messwerte) / samplerate
    
    # dp/dt berechnen
    dp_dt = np.gradient(pressure, time_vector)  # dBar/s
    
    # Dichte berechnen
    absolute_salinity = gsw.SA_from_SP(salinity, pressure, longitude, latitude)
    conservative_temperature = gsw.CT_from_t(absolute_salinity, temperature, pressure)
    rho = gsw.rho(absolute_salinity, conservative_temperature, pressure)  # kg/m³
    
    # Sinkrate berechnen
    g = 9.8  # m/s²
    dz_dt = dp_dt * (-1 / (rho * g))  # m/s
    
    return dz_dt    